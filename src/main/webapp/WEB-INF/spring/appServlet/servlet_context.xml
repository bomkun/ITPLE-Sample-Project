<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
	
	<!-- 기본 패키지 내에서 @Controller로 표현된 클래스만 빈으로 등록함. root_context.xml과 반대 -->	
	<context:component-scan base-package="com.itple.sample" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>		
		
	<!--리소스 매핑 설정  -->	
	<mvc:resources mapping="/resources/**" location="/resources/" />		
	
	
	
	<!-- 어노테이션 방식의 컨트롤러를 사용할 때 필요한 DispatcherServlet 전략 Bean을 자동으로 등록해줌 -->
	
	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<beans:ref bean="stringMessageConverter" />	
			<beans:ref bean="xmlConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<beans:bean id="stringMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>	
	</beans:bean>
	
	<beans:bean id="xmlConverter" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
		<beans:property name="supportedMediaTypes">
			<beans:list>
				<beans:value>text/xml;charset=UTF-8</beans:value>
				<beans:value>application/xml;charset=UTF-8</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
		
	<mvc:default-servlet-handler />
	
	<!-- 웹 애플리케이션 WAR 파일 내에 포함된 뷰 템플릿을 찾음. prefix : 접두어 , suffix : 접미어 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- xml ViewResolver -->

 <!-- 	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	    <property name="mediaTypes">
		  <map>
		      <entry key="html" value="text/html"/>
		      <entry key="json" value="application/json"/>
		      <entry key="xml"  value="application/xml"/>
		  </map>
		</property>
	     <property name="viewResolvers">
		    <list>
		      <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		        <property name="prefix" value="/WEB-INF/jsp/"/>
		        <property name="suffix" value=".jsp"/>
		      </bean>
		    </list>
		</property>
	</bean>	  -->

	<!-- HandlerInterceptor를 상속하여 인터셉터를 구현. resources 밑에 있는 파일들을 매핑에서 제외.ContextInterceptor 호출  -->
	<mvc:interceptors>
      	<mvc:interceptor>
      		<mvc:mapping path="/*"/>
      		<mvc:mapping path="/**/*" />
            <mvc:exclude-mapping path="/resources/**"/>
			<beans:bean class="com.itple.sample.common.interceptor.ContextPathInterceptor" />
		</mvc:interceptor> 
    </mvc:interceptors>
</beans:beans>